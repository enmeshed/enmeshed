{"version":3,"file":"test_server.js","sources":["../src/test_server.lsc"],"sourcesContent":["import { Controller, Node } from '.'\n\nlet myEnv\n\nclass MyController extends Controller:\n  nodes = {}\n\n  identifyNode(nodeInfo) ->\n    hash = `cluster:${nodeInfo.cluster}:id:${nodeInfo.id}`\n    if this.nodes[hash]: return this.nodes[hash]\n\n    node = new Node(hash)\n    node.environment = myEnv\n    this.nodes[hash] = node\n    node\n\n  // Test dynamism; one second after node connects, push a new cluster def\n  nodeDidConnect(node): void ->\n    setTimeout(\n      ->\n        myEnv.update([\n          Cluster.fromObject({\n            name: \"second_cluster\"\n            connect_timeout: { seconds: 5 }\n            type: \"STATIC\"\n            lb_policy: \"ROUND_ROBIN\"\n            hosts: [\n              {\n                socket_address: { address: '127.0.0.1', port_value: 12345 }\n              }\n            ]\n            http2_protocol_options: {}\n          })\n        ])\n      1000\n    )\n\n  nodeDidDisconnect(node): void ->\n    return\n\n\ncontroller = new MyController()\nnow myEnv = controller.createEnvironment(\"testEnvironment\")\n{ Cluster } = controller.types\nmyEnv.set([\n  Cluster.fromObject({\n    name: \"my_cluster\"\n    connect_timeout: { seconds: 5 }\n    type: \"EDS\"\n    eds_cluster_config: {\n      eds_config: { ads: {} }\n    }\n    lb_policy: \"ROUND_ROBIN\"\n    http2_protocol_options: {}\n  })\n])\n\ncontroller.serve('0.0.0.0:34567')\n"],"names":["myEnv","MyController","Controller","nodes","identifyNode","nodeInfo","hash","cluster","id","node","Node","environment","nodeDidConnect","setTimeout","update","Cluster","fromObject","name","connect_timeout","seconds","type","lb_policy","hosts","socket_address","address","port_value","http2_protocol_options","nodeDidDisconnect","controller","createEnvironment","types","set","eds_cluster_config","eds_config","ads","serve"],"mappings":";;;;AAEA,IAAIA,KAAJ;;AAEA,MAAMC,YAAN,SAA2BC,YAA3B,CAAqC;;;SACnCC,KADmC,GAC3B,EAD2B;;;EAGnCC,YAAY,CAACC,QAAD,EAAW;UACrBC,IAAI,GAAI,WAAUD,QAAQ,CAACE,OAAQ,OAAMF,QAAQ,CAACG,EAAG,EAArD;QACG,KAAKL,KAAL,CAAWG,IAAX,CAAH,EAAqB,OAAO,KAAKH,KAAL,CAAWG,IAAX,CAAP;UAErBG,IAAI,GAAG,IAAIC,MAAJ,CAASJ,IAAT,CAAP;IACAG,IAAI,CAACE,WAAL,GAAmBX,KAAnB;SACKG,KAAL,CAAWG,IAAX,IAAmBG,IAAnB;WACAA,IAAI;GAV6B;;;EAanCG,cAAc,CAACH,IAAD,EAAa;IACzBI,UAAU,CACR;aACEb,KAAK,CAACc,MAAN,CAAa,CACXC,OAAO,CAACC,UAAR,CAAmB;QACjBC,IAAI,EAAE,gBADW;QAEjBC,eAAe,EAAE;UAAEC,OAAO,EAAE;SAFX;QAGjBC,IAAI,EAAE,QAHW;QAIjBC,SAAS,EAAE,aAJM;QAKjBC,KAAK,EAAE,CACL;UACEC,cAAc,EAAE;YAAEC,OAAO,EAAE,WAAX;YAAwBC,UAAU,EAAE;;SAFjD,CALU;QAUjBC,sBAAsB,EAAE;OAV1B,CADW,CAAb;KAFM,EAgBR,IAhBQ,CAAV;;;EAmBFC,iBAAiB,CAAClB,IAAD,EAAa;;;;;;AAIhC,MAAAmB,UAAU,GAAG,IAAI3B,YAAJ,EAAb;AACID,KAAJ,GAAY4B,UAAU,CAACC,iBAAX,CAA6B,iBAA7B,CAAZ;MACEd,UAAYa,UAAU,CAACE,MAAvBf;AACFf,KAAK,CAAC+B,GAAN,CAAU,CACRhB,OAAO,CAACC,UAAR,CAAmB;EACjBC,IAAI,EAAE,YADW;EAEjBC,eAAe,EAAE;IAAEC,OAAO,EAAE;GAFX;EAGjBC,IAAI,EAAE,KAHW;EAIjBY,kBAAkB,EAAE;IAClBC,UAAU,EAAE;MAAEC,GAAG,EAAE;;GALJ;EAOjBb,SAAS,EAAE,aAPM;EAQjBK,sBAAsB,EAAE;CAR1B,CADQ,CAAV;AAaAE,UAAU,CAACO,KAAX,CAAiB,eAAjB"}