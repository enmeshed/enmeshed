{"version":3,"file":"index.js","sources":["../src/Resource.lsc","../src/Node.lsc","../src/Environment.lsc","../src/Connection.lsc","../src/Controller.lsc"],"sourcesContent":["export class ResourceType:\n  index: number = 0\n  typeId: string = \"\"\n  shortName: string = \"\"\n  messageClass = null\n\n  constructor(Any, index, typeId, shortName, messageClass) ->\n    Object.assign(this, { index, typeId, shortName, messageClass, Any })\n\n  getResourceName(resource) -> resource.name\n\n  // Convert an object of this resource type to a google.protobuf.Any\n  toAny(obj) ->\n    this.Any.create({\n      type_url: this.typeId\n      value: this.messageClass.encode(obj).finish()\n    })\n\n  // Convert an object to a protobuf matching this resource\n  fromObject(obj) ->\n    this.messageClass.fromObject(obj)\n\n  checkResource(obj) ->\n    obj instanceof this.messageClass.ctor\n\nexport class ResourceTypes:\n  _byFqtn = {}\n  _byUrl = {}\n  _byIndex = []\n\n  constructor(controller) ->\n    this.controller = controller\n    this._loadTypes()\n\n  _loadType(idx, fqtn) ->\n    { proto } = this.controller\n    path = fqtn.split('.')\n    shortName = path[path.length - 1]\n    url = `type.googleapis.com/${fqtn}`\n    ty = new ResourceType(this.controller.Any, idx, url, shortName, proto.type(fqtn))\n    this[shortName] = ty\n    this._byIndex[idx] = ty\n    this._byFqtn[fqtn] = ty\n    this._byUrl[url] = ty\n    ty\n\n  _loadTypes() ->\n    ty = this._loadType(0, \"envoy.api.v2.ClusterLoadAssignment\")\n    ty.getName(resource) -> resource.cluster_name\n    this._loadType(1, \"envoy.api.v2.Cluster\")\n    this._loadType(2, \"envoy.api.v2.RouteConfiguration\")\n    this._loadType(3, \"envoy.api.v2.Listener\")\n    this._loadType(4, \"envoy.api.v2.Secret\")\n\n  forTypeId(id) -> this._byFqtn[id]\n  forTypeUrl(url) -> this._byUrl[url]\n  forIndex(idx) -> this._byIndex[idx]\n\n  typeOf(resource) ->\n    for elem rType in this._byIndex:\n      if rType.checkResource(resource): return rType\n    null\n\n// A container storing an element of data for each resource type.\nexport class ResourceTypeData:\n  values = [null, null, null, null, null]\n\n  get(type) -> this.values[type.index]\n  set(type, value): void -> this.values[type.index] = value\n  reset(): void ->\n    this.values = [null, null, null, null, null]\n  _set(values): void -> this.values = values\n","import { ResourceTypeData } from './Resource'\n\nincoming = require('debug')('node-control-plane:traffic:incoming')\noutgoing = require('debug')('node-control-plane:traffic:outgoing')\n\n// Node represents a remote Envoy node that is connected to this control\n// plane.\nexport class Node:\n  controller = null\n  environment = null\n  key = null\n  // Connection between Envoy and this node\n  connection = null\n  // Versions most recently acked\n  acked: ResourceTypeData = new ResourceTypeData()\n  // Names of each kind of resource requested by the client\n  requested: ResourceTypeData = new ResourceTypeData()\n\n  constructor(key) ->\n    this.key = key\n\n  // Clear stateful data related to this connection\n  clearConnectionData(): void ->\n    this.acked = new ResourceTypeData()\n    this.requested = new ResourceTypeData()\n\n  // Node connected to control plane.\n  didConnect(connection): void ->\n    if this.connection:\n      throw new Error(\"Node connected twice\")\n\n    if not this.environment:\n      throw new Error(\"Node must be assigned an environment by Controller.identifyNode\")\n\n    this.connection = connection\n    this.controller = connection.controller\n    this.environment.nodeWillJoin(this)\n\n  // Node disconnected from control plane.\n  didDisconnect(): void ->\n    this.connection = null\n    this.clearConnectionData()\n    this.environment.nodeDidLeave(this)\n    this.environment = null\n\n  // Environment data changed\n  environmentDidChange(environment, diffs) ->\n    // Issue a discovery response for each type of data that was previously\n    // requested by the Envoy server.\n    for elem ty in diffs:\n      if ty and this.requested.get(ty):\n        this.sendDiscoveryResponse(ty)\n\n  sendDiscoveryResponse(type) ->\n    names = this.requested.get(type)\n    [ version, resources ] = this.environment.getMatchingResources(type, names)\n    outgoing('-> node', this.key, ':', type.typeId, version, resources)\n\n    // Convert resources to an array of google.protobuf.Any's\n    anyResources = [...for val e in resources: [type.toAny(e)]]\n    this.connection?.write({\n      version_info: version.toString()\n      type_url: type.typeId\n      resources: anyResources\n    })\n\n  // Receive a discovery request from Envoy\n  discoveryRequest(packet): void ->\n    if packet.type_url:\n      type = this.controller.types.forTypeUrl(packet.type_url)\n      this.discoveryRequestForType(type, packet)\n      return\n\n  discoveryRequestForType(type, packet): void ->\n    // request is a NACK\n    if packet.error_detail:\n      incoming(`<- node ${this.key}: nack ${type.typeId}`, packet.error_detail)\n      // XXX: nack handling?\n      return\n\n    // request is an ACK\n    if (not packet.error_detail) and packet.version_info:\n      incoming(`<- node ${this.key}: ack ${type.typeId} v${packet.version_info}`)\n      this.acked.set(type, packet.version_info)\n      return\n\n    // Specific resource request\n    incoming(`<- node ${this.key}: discovery request`, packet)\n    this.requested.set(type, packet.resource_names)\n    this.sendDiscoveryResponse(type)\n","import { ResourceTypeData } from './Resource'\ndebug = require('debug')('node-control-plane:environment')\nobnoxious = require('debug')('node-control-plane:environment:obnoxious')\n\nexport class Environment:\n  id: string = \"\"\n  controller = null\n  // Version for each resource type is an auto-incrementing number\n  version = new ResourceTypeData()\n  // Data for each resource type is a Hash<Name, Resource>\n  data = new ResourceTypeData()\n  // Nodes that are members of this environment\n  nodes = []\n  // Version nonce string added to each version when propagating to Envoy\n  versionNonce: string = \"\"\n\n  constructor(controller, id) ->\n    this.controller = controller\n    this.id = id or \"\"\n    this.version._set([0,0,0,0,0])\n    // XXX: do something better than a random number\n    this.versionNonce = `${this.id}_${Math.floor(Math.random()*100000)}`\n\n  nodeWillJoin(node): void ->\n    if this.nodes.find(x -> x == node):\n      throw new Error(`Environment ${this.id}: node ${node.key} was added twice`)\n    this.nodes.push(node)\n    debug(\"environment\", this.id,\": node\", node.key, \"joined\")\n    obnoxious(\"environment\", this.id,\"membership:\", this.nodes.map(x -> x.key))\n\n  nodeDidLeave(node): void ->\n    if not this.nodes.find(x -> x == node):\n      throw new Error(`Environment ${this.id}: node ${node.key} was deleted twice`)\n    this.nodes = this.nodes.filter(x -> x != node)\n    debug(\"environment\", this.id, \": node\", node.key, \"left\")\n    obnoxious(\"environment\", this.id,\"membership:\", this.nodes.map(x -> x.key))\n\n  // Answer a discovery request for a list of named resources of a given type.\n  // For empty name lists, just return all resources of the type.\n  getMatchingResources(type, names) ->\n    version = this.version.get(type)\n    allResources = this.data.get(type)\n    result = if (not allResources) or (not names) or (names.length == 0):\n      [version, allResources or {}]\n    else:\n      [\n        version\n        // Filter resources by requested names\n        {...for elem e in names:\n          if allResources[e]: {[e]: allResources[e]}\n        }\n      ]\n    obnoxious(\"getMatchingResources\", type.typeId, names, result)\n    result\n\n  hasResourcesOfType(type): boolean ->\n    data = this.data.get(type)\n    if data and Object.keys(data).length > 0: true else: false\n\n  _setResources(type, resourceList): void ->\n    nextData = {...for elem resource in resourceList:\n      {[type.getResourceName(resource)]: resource}\n    }\n    this.data.set(type, nextData)\n\n  _clearResources(type): void ->\n    this.data.set(type, null)\n\n  _bumpVersion(type): void ->\n    version = this.version.get(type)\n    this.version.set(type, version + 1)\n\n  // Inform nodes in this environment that data has changed.\n  _handleDiff(diff): void ->\n    obnoxious(\"diff\", diff[0]?.typeId, diff[1]?.typeId, diff[2]?.typeId, diff[3]?.typeId, diff[4]?.typeId)\n    for elem node in this.nodes:\n      node.environmentDidChange(this, diff)\n\n  // Set the resources in this environment equal to the resources in the list.\n  // Removes all other resources.\n  set(resourceList): void ->\n    diff = [null, null, null, null, null]\n    seen = [null, null, null, null, null]\n    next = [[], [], [], [], []]\n\n    // Collate by type\n    for elem resource in resourceList:\n      ty = this.controller.types.typeOf(resource)\n      if not ty:\n        throw new Error(\"Resource of invalid type \" + resource)\n\n      seen[ty.index] = ty\n      diff[ty.index] = ty\n      next[ty.index].push(resource)\n\n    // Perform updates for types seen\n    for idx i, elem ty in seen:\n      if ty:\n        // For those types seen, store the new resources\n        this._bumpVersion(ty)\n        this._setResources(ty, next[i])\n      else:\n        // For those types not seen, if they are populated, create a diff entry\n        // indicating that they will be emptied\n        unseenType= this.controller.types.forIndex(i)\n        if this.hasResourcesOfType(unseenType):\n          this._bumpVersion(unseenType)\n          this._clearResources(unseenType)\n          diff[i] = unseenType\n\n    // Broadcast differences to interested nodes\n    this._handleDiff(diff)\n\n  update(resourceList, deletions): void ->\n    diff = [null, null, null, null, null]\n\n    // Modifications\n    for elem resource in resourceList:\n      ty = this.controller.types.typeOf(resource)\n      if not ty: throw new Error(\"Resource of invalid type \" + resource)\n\n      diff[ty.index] = ty\n\n      // Store resource\n      let data = this.data.get(ty)\n      if not data:\n        now data = {}\n        this.data.set(ty, data)\n      data[ty.getResourceName(resource)] = resource\n\n    // Deletions\n    for elem [ty, name] in (deletions or []):\n      diff[ty.index] = ty\n      data = this.data.get(ty)\n      if data: delete data[name]\n\n    // Bump versions for types with diffs\n    for elem ty in diff: if ty: this._bumpVersion(ty)\n\n    this._handleDiff(diff)\n","import { StreamHandler } from '@enmeshed/grpc'\n\ndebug = require('debug')('node-control-plane')\n\n// An ADS Streaming API connection\nexport class Connection extends StreamHandler:\n  // The Node on the other side of this connection\n  peer = null\n\n  constructor(stream, server) ->\n    super(stream, server)\n    this.controller = server.controller\n\n  didDisconnect(): void ->\n    if this.peer:\n      debug(\"Node will disconnect: \", this.peer.key)\n      this.peer.didDisconnect()\n      this.controller.nodeDidDisconnect(this.peer)\n      this.peer = null\n\n  start(): void ->\n    debug(\"gRPC connection opened\")\n    return\n\n  error(err, isInternal): void ->\n    debug(\"Connection encountered error\", err)\n    this.didDisconnect()\n\n  data(packet): void ->\n    // If we don't know which Envoy instance we're talking to, find out using\n    // the Node protobuf info\n    if not this.peer:\n      debug(\"New node connected, identifying\", packet.node)\n      node = this.controller.identifyNode(packet.node)\n      if not node:\n        debug(\"Node was unidentified, dropping\")\n        this.end(new Error(\"unrecognized node\"))\n\n      debug(\"Opened stream with peer id: \", node.key)\n      this.peer = node\n      node.didConnect(this)\n      this.controller.nodeDidConnect(this.peer)\n\n    this.peer.discoveryRequest(packet)\n\n  hangup() ->\n    debug(\"Envoy peer hung up: \", this.peer.key)\n    this.end()\n    this.didDisconnect()\n","import path from 'path'\nimport { Protocols, ServerEnhancer } from '@enmeshed/grpc'\nimport { ResourceTypes } from './Resource'\nimport { Environment } from './Environment'\nimport { Connection } from './Connection'\n\ngrpc = require('@grpc/grpc-js')\n\ndebug = require('debug')('node-control-plane')\n\nPROTO_PATH = path.resolve(__dirname, '..', 'proto')\nGOOG_PROTO_PATH = require.resolve('protobufjs')\n\nexport class Controller:\n  constructor(opts) ->\n    this.Connection = Connection\n    this.Environment = opts?.Environment or Environment\n    this.proto = new Protocols()\n    this._requireProtocols()\n    this.types = new ResourceTypes(this)\n    this.server = new ServerEnhancer(new grpc.Server())\n    this.server.controller = this\n    this.server.addService(\n      this.proto.service(\"envoy.service.discovery.v2.AggregatedDiscoveryService\")\n      { StreamAggregatedResources: this.Connection }\n    )\n\n  // Require envoy protocols\n  _requireProtocols(): void ->\n    { proto } = this\n    proto.addProtoPath(PROTO_PATH)\n    proto.addProtoPath(GOOG_PROTO_PATH)\n    proto.require('envoy/api/v2/rds')\n    proto.require('envoy/api/v2/cds')\n    proto.require('envoy/api/v2/eds')\n    proto.require('envoy/api/v2/lds')\n    proto.require('envoy/service/discovery/v2/ads')\n    proto.require('envoy/service/discovery/v2/sds')\n    proto.load()\n\n    this.Any = proto.type(\"google.protobuf.Any\")\n    this.typeProtocols = [\n      proto.type(\"envoy.api.v2.ClusterLoadAssignment\")\n      proto.type(\"envoy.api.v2.Cluster\")\n      proto.type(\"envoy.api.v2.RouteConfiguration\")\n      proto.type(\"envoy.api.v2.Listener\")\n      proto.type(\"envoy.api.v2.Secret\")\n    ]\n\n  nodeDidConnect(node): void -> return\n  nodeDidDisconnect(node): void -> return\n\n  createEnvironment(id) -> new this.Environment(this, id)\n\n  serve(port, creds): void -/>\n    <- this.server.bind(port, creds or grpc.ServerCredentials.createInsecure())\n    this.server.start()\n    debug(`gRPC server listening on ${port}`)\n\n  stop() ->\n    this.server.shutdown()\n"],"names":["ResourceType","constructor","Any","index","typeId","shortName","messageClass","Object","assign","getResourceName","resource","name","toAny","obj","create","type_url","value","encode","finish","fromObject","checkResource","ctor","ResourceTypes","controller","_byFqtn","_byUrl","_byIndex","_loadTypes","_loadType","idx","fqtn","proto","path","split","length","url","ty","type","getName","cluster_name","forTypeId","id","forTypeUrl","forIndex","typeOf","rType","ResourceTypeData","values","get","set","reset","_set","incoming","require","outgoing","Node","key","environment","connection","acked","requested","clearConnectionData","didConnect","Error","nodeWillJoin","didDisconnect","nodeDidLeave","environmentDidChange","diffs","sendDiscoveryResponse","names","getMatchingResources","version","resources","anyResources","e","write","version_info","toString","discoveryRequest","packet","types","discoveryRequestForType","error_detail","resource_names","debug","obnoxious","Environment","data","nodes","versionNonce","Math","floor","random","node","find","x","push","map","filter","allResources","result","hasResourcesOfType","keys","_setResources","resourceList","nextData","_clearResources","_bumpVersion","_handleDiff","diff","seen","next","i","unseenType","update","deletions","Connection","StreamHandler","stream","server","peer","nodeDidDisconnect","start","error","err","isInternal","identifyNode","end","nodeDidConnect","hangup","grpc","PROTO_PATH","resolve","__dirname","GOOG_PROTO_PATH","Controller","opts","Protocols","_requireProtocols","ServerEnhancer","Server","addService","service","StreamAggregatedResources","addProtoPath","load","typeProtocols","createEnvironment","serve","port","creds","bind","ServerCredentials","createInsecure","stop","shutdown"],"mappings":"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"}